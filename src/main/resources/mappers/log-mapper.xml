<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap type="Member" id="resultMemberSet">
		<id property="memberId" column="MEMBER_ID" />
		<result property="memberPwd" column="MEMBER_PWD" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="nickName" column="MEMBER_NICKNAME" />
		<result property="gender" column="MEMBER_GENDER" />
		<result property="email" column="MEMBER_EMAIL" />
		<result property="birthDay" column="MEMBER_BIRTHDAY" />
		<result property="phone" column="MEMBER_PHONE" />
		<result property="post" column="MEMBER_POST" />
		<result property="address" column="MEMBER_ADDRESS" />
		<result property="addressDetail" column="MEMBER_ADDRESS_DETAIL" />
		<result property="status" column="STATUS" />
		<result property="gradeNum" column="GRADE_NUM" />
		<result property="cdt" column="CDT" />
		<result property="mdt" column="MDT" />
	</resultMap>

	<select id="loginUser" parameterType="Member"
		resultMap="resultMemberSet">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
		AND MEMBER_PWD = FN_ENCRYPT_MD5(#{memberPwd})
		AND STATUS = '1'
	</select>

	<insert id="insertMem" parameterType="Member">
		INSERT INTO MEMBER
		VALUES(#{memberId},FN_ENCRYPT_MD5(#{memberPwd}),#{memberName},#{nickName},#{gender},#{email},#{birthDay},#{phone},#{post},#{address},#{addressDetail},DEFAULT,DEFAULT,SYSDATE,SYSDATE)
	</insert>

<!-- 아이디 중복체크 -->	
	<select id="checkIdDup" parameterType="String" resultType="int">
		select 	COUNT(MEMBER_ID) 
		from 	MEMBER
		WHERE	MEMBER_ID = #{value}
	</select>
	
	<!-- 핸드폰번호로 아이디 찾기 -->
	<select id="findId_phone" parameterType="hashmap" resultType="String">
		SELECT 	MEMBER_ID 
		FROM 	MEMBER
		WHERE 	MEMBER_NAME = #{name}
		AND 	MEMBER_PHONE = #{key}
	</select>
	
	<!-- 이메일로 아이디 찾기 -->
	<select id="findId_email" parameterType="hashmap" resultType="String">
		SELECT 	MEMBER_ID 
		FROM 	MEMBER
		WHERE 	MEMBER_NAME = #{name}
		AND 	MEMBER_EMAIL = #{key}
	</select>
	
	<!-- 생년월일로 아이디 찾기 -->
	<select id="findId_birth" parameterType="hashmap" resultType="String">
		SELECT 	MEMBER_ID 
		FROM 	MEMBER
		WHERE 	MEMBER_NAME = #{name}
		AND 	MEMBER_BIRTHDAY = #{key}
	</select>

	<!-- 닉네임 중복확인 -->
	<select id="checkNick" parameterType="String" resultType="int">
		SELECT 	COUNT(MEMBER_NICKNAME) 
		FROM 	MEMBER
		WHERE 	MEMBER_NICKNAME = #{value}	
	</select>
	
	
	<!-- 비밀번호 변경하는 창 연결 -->
	<select id="findPwView" parameterType="hashmap" resultType="String">
		SELECT 	* 
		FROM	MEMBER
		WHERE 	MEMBER_ID = #{memberId}
		AND 	MEMBER_PHONE = #{phone}
	</select>

	<!-- 비밀번호 변경하기  -->
	<update id="changePw" parameterType="hashmap">
		UPDATE 	MEMBER 
		SET		MEMBER_PWD = FN_ENCRYPT_MD5(#{password})
		WHERE 	MEMBER_EMAIL = #{email}
	</update>
	<!-- 아이디 변경 -->
	<update id="updateId" parameterType="Member">
		UPDATE MEMBER
		SET MEMBER_NAME=#{memberName}, MEMBER_NICKNAME=#{nickName}
		WHERE MEMBER_ID=#{memberId}
	</update>
	<!-- 연락처변경 -->
	<update id="updatePhone" parameterType="Member">
		UPDATE MEMBER
		SET MEMBER_EMAIL=#{email}, MEMBER_PHONE=#{phone}
		WHERE MEMBER_ID=#{memberId}
	</update>
	<!-- 주소변경 -->
	<update id="updateAddress" parameterType="Member">
		UPDATE MEMBER
		SET MEMBER_POST=#{post}, MEMBER_ADDRESS=#{address},
		MEMBER_ADDRESS_DETAIL=#{addressDetail}
		WHERE MEMBER_ID=#{memberId}
	</update>
	<!-- 비밀번호 변경 -->		
	<update id="updatePassword" parameterType="Member">
		UPDATE MEMBER
		SET MEMBER_PWD=#{memberPwd}
		WHERE MEMBER_ID=#{memberId}  
	</update>
	<!-- 회원탈퇴 -->
	<update id="updateDelete" parameterType="Member">
		UPDATE MEMBER
		SET STATUS='0'
		WHERE MEMBER_ID =#{memberId} 
	</update>
	<!-- 블랙리스트걸기 -->
	<update id="blackMember" parameterType="Member">
		UPDATE MEMBER
		SET STATUS= '3',MDT=SYSDATE
		WHERE MEMBER_ID =#{memberId}
	</update>
	<!-- 블랙리스트 취소 -->
	<update id="outMember" parameterType="Member">
		UPDATE MEMBER
		SET STATUS= '1',MDT=SYSDATE
		WHERE MEMBER_ID =#{memberId}
	</update>
	<!-- 블랙리스트 검색 -->
	<select id="searchList" parameterType="mSearch" resultMap="resultMemberSet">
		SELECT * FROM MEMBER
		<where>
			<choose>
				<when test="searchCondition == 'memberId'">
					MEMBER_ID LIKE '%' || #{searchValue } || '%'
				</when>
				<when test="searchCondition == 'status'">
					AND STATUS LIKE '%' || #{searchValue } || '%'
				</when>
				<when test="searchCondition == 'all'">
					AND MEMBER_ID LIKE '%' || #{searchValue } || '%'
					OR STATUS LIKE '%' || #{searchValue } || '%'
				</when>
			</choose>
		</where>
		ORDER BY MDT DESC
	</select>
		<!-- 페이징처리관련 -->
	<select id="selectListblack" resultMap="resultMemberSet">
		SELECT *
		FROM MEMBER
		ORDER BY MEMBER_ID DESC
	</select>
	<select id="getListCountblack" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE STATUS='1'
	</select> 
</mapper>
